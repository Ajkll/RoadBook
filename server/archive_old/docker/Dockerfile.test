FROM node:18-alpine

# Install OpenSSL and other necessary packages
RUN apk add --no-cache openssl libc6-compat postgresql-client

# Define work directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy the rest of the application
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Set permissions for directories
RUN mkdir -p /app/test-results /app/logs /app/dist/tests/utils /app/dist/tests/mocks && \
    chmod -R 777 /app/test-results /app/logs /app/dist

# Create startup script for tests with proper line endings
RUN printf '#!/bin/sh\necho "🧪 Starting test environment in Docker..."\n\n# Wait for PostgreSQL to be ready\necho "⏳ Waiting for PostgreSQL..."\nwhile ! pg_isready -h postgres-test -p 5432 -U postgres; do\n  sleep 1\ndone\necho "✅ PostgreSQL is ready!"\n\n# Run the database migrations\necho "🔄 Running database migrations..."\nnpx prisma migrate deploy\n\n# Build the TypeScript files\necho "🔄 Building TypeScript files..."\nnpm run build:fast\n\n# Run the tests\necho "🧪 Running tests..."\nNODE_ENV=test npm test "$@"\n\nTEST_RESULT=$?\n\n# Export results\nif [ $TEST_RESULT -eq 0 ]; then\n  echo "✅ Tests passed!"\nelse\n  echo "❌ Tests failed."\nfi\n\nexit $TEST_RESULT\n' > /app/run-tests.sh && \
    chmod +x /app/run-tests.sh

# Command to run the tests
CMD ["/app/run-tests.sh"]