name: Test Env Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - test-env

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          yarn global add eas-cli

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: client/yarn.lock

      - name: Install dependencies
        run: |
          cd client
          yarn install

      # Étape critique: créer les credentials dans le bon répertoire
      - name: Create keystore credentials in the correct directory
        run: |
          cd client
          
          # Créer le répertoire pour les credentials
          mkdir -p ./credentials/android
          
          # Décodage du keystore dans le bon emplacement
          echo '${{ secrets.EXPO_ANDROID_KEYSTORE_BASE64 }}' | base64 -d > ./credentials/android/keystore.jks
          
          # Créer le fichier credentials.json
          cat > ./credentials.json << EOF
          {
            "android": {
              "keystore": {
                "keystorePath": "./credentials/android/keystore.jks",
                "keystorePassword": "${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.EXPO_ANDROID_KEY_ALIAS }}",
                "keyPassword": "${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}"
              }
            }
          }
          EOF
          
          # Vérifier que le fichier existe
          ls -la ./credentials/android/keystore.jks

      - name: Build Android App Bundle
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd client
          
          # Forcer la déconnexion pour éviter l'utilisation des credentials distants
          eas logout || true
          
          # Vérifier si le dossier android existe déjà
          if [ ! -d "./android" ]; then
            # Générer le projet natif Android si nécessaire
            yarn expo prebuild --platform android --clean
          fi
          
          # Utiliser eas build:configure pour générer la config correcte si nécessaire
          yarn eas build:configure --platform android
          
          # Utiliser la commande directe avec Gradle pour construire l'AAB
          cd android
          ./gradlew bundleRelease
          
          # Vérifier si le AAB a été correctement généré
          mkdir -p ../../build
          AAB_PATH=$(find . -name "*.aab" -type f | grep -v intermediates | head -n 1)
          if [ -n "$AAB_PATH" ]; then
            echo "Found AAB at: $AAB_PATH"
            cp "$AAB_PATH" ../../build/app.aab
          else
            echo "No AAB file found in $(pwd)!"
            find . -name "*.aab" -type f
            exit 1
          fi

      - name: Convert AAB to APK
        run: |
          # Vérifier si le fichier AAB existe
          if [ -f "./build/app.aab" ]; then
            # Télécharger bundletool
            wget https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar
          
            # Convertir AAB en APK universel
            java -jar bundletool-all-1.15.6.jar build-apks \
              --bundle=./build/app.aab \
              --output=./build/app.apks \
              --mode=universal
          
            # Extraire l'APK universel
            unzip ./build/app.apks -d ./build
            mv ./build/universal.apk ./build/app.apk
          
            echo "Successfully converted AAB to APK"
          else
            echo "ERROR: Cannot convert AAB to APK because AAB file is missing"
            exit 1
          fi

      - name: Extract changelog entry
        id: changelog
        run: |
          cd client
          
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          if [ -f "CHANGELOG.md" ]; then
            SECTION=$(awk -v tag="$CURRENT_TAG" '
              BEGIN {found=0}
              /^## / {
                if ($0 ~ "\\["tag"\\]") {found=1; next}
                else if ($0 ~ /^## \[[0-9]+\.[0-9]+\.[0-9]+\]/) {found=0}
              }
              found {print}
            ' CHANGELOG.md)
          
            if [ -z "$SECTION" ]; then
              SECTION=$(cat CHANGELOG.md)
            fi
          else
            SECTION="Pas de CHANGELOG.md trouvé pour cette version."
          fi
          
          CLEAN_SECTION=$(echo "$SECTION" | sed '/^$/d')
          
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "$CLEAN_SECTION" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release with Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: "v${{ github.ref_name }} (Test Env)"
          body: |
            ### Version ${{ github.ref_name }} (Test Environment)
            
            <details>
            <summary>Dernières modifications</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
            
            **Artifacts disponibles:**
            - Roadbook.apk (Android Package)
            - Roadbook.aab (Android App Bundle)
            
            [Voir le CHANGELOG complet](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.ref_name }}/client/CHANGELOG.md)
          prerelease: true
          files: |
            build/app.apk
            build/app.aab

      - name: Create PR to main
        if: github.ref == 'refs/heads/test-env' && !contains(github.event.head_commit.message, 'chore(release)')
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: test-env
          title: "Merge test-env → main (v${{ github.ref_name }})"
          body: |
            ### Nouvelles modifications dans test-env
            
            **Version:** ${{ github.ref_name }}
            **Artifacts:** [Voir la release](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }})
            
            <details>
            <summary>Dernières modifications</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
          labels: "automated-pr,needs-review"