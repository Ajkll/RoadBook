name: Test Env Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - test-env

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          npm install -g eas-cli

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      # Étape critique: créer les credentials dans le bon répertoire
      - name: Create keystore credentials in the correct directory
        run: |
          # Créer le répertoire pour les credentials
          mkdir -p ./credentials/android
          
          # Décodage du keystore dans le bon emplacement
          echo '${{ secrets.EXPO_ANDROID_KEYSTORE_BASE64 }}' | base64 -d > ./credentials/android/keystore.jks
          
          # Créer le fichier credentials.json
          cat > ./credentials.json << EOF
          {
            "android": {
              "keystore": {
                "keystorePath": "./credentials/android/keystore.jks",
                "keystorePassword": "${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.EXPO_ANDROID_KEY_ALIAS }}",
                "keyPassword": "${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}"
              }
            }
          }
          EOF
          
          # Vérifier que le fichier existe
          ls -la ./credentials/android/keystore.jks

      - name: Build Android App Bundle
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          # Forcer la déconnexion pour éviter l'utilisation des credentials distants
          eas logout || true
          
          # Utiliser withoutCredentials via une option temporaire
          TMP_EAS_JSON=$(mktemp)
          jq '.build."local-production".android.withoutCredentials = true' eas.json > "$TMP_EAS_JSON"
          mv "$TMP_EAS_JSON" eas.json
          
          # Vérifier la configuration de eas.json
          echo "Contenu de eas.json:"
          cat eas.json
          
          # Lancer un build local avec EAS Build
          # Pour les builds locaux avec EAS, nous devons utiliser la commande correcte
          eas build --platform android --profile local-production --local \
          --non-interactive \
          --clear-cache
          
          # Une fois le build local terminé, les fichiers devraient être dans le répertoire de sortie
          # qui est généralement dans ./android/app/build/outputs/bundle/release/
          mkdir -p ./build
          
          # Chercher le fichier AAB généré par le build local
          find . -name "*.aab" -type f

      - name: Copy and prepare artifacts
        run: |
          mkdir -p ./build
          
          # Chercher le fichier AAB généré
          # Généralement, pour un build local, il se trouve dans ./android/app/build/outputs/
          AAB_PATH=$(find . -name "*.aab" -type f | head -n 1)
          
          if [ -n "$AAB_PATH" ]; then
            echo "Found AAB at: $AAB_PATH"
            cp "$AAB_PATH" ./build/app.aab
          else
            echo "No AAB file found in standard locations, checking Android directories..."
            for dir in $(find . -type d -name "android"); do
              echo "Checking in $dir"
              find "$dir" -type f -name "*.aab" -o -name "*.apk"
            done
          
            # Chercher dans des sous-répertoires spécifiques où EAS pourrait placer les builds
            echo "Checking in EAS build directories..."
            find . -path "*/build/*" -name "*.aab" -o -name "*.apk"
          
            # Si toujours rien trouvé, essayer de regarder où les fichiers ont été générés
            echo "Listing recently created files..."
            find . -type f -mmin -10 | grep -E '\.(aab|apk)$' || echo "No recent AAB/APK files found"
          
            echo "ERROR: Cannot find AAB file"
            exit 1
          fi
          
          # Convertir AAB en APK (via bundletool)
          wget https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar
          java -jar bundletool-all-1.15.6.jar build-apks \
            --bundle=./build/app.aab \
            --output=./build/app.apks \
            --mode=universal
          unzip ./build/app.apks -d ./build
          mv ./build/universal.apk ./build/app.apk

      - name: Extract changelog entry
        id: changelog
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          SECTION=$(awk -v tag="$CURRENT_TAG" '
            BEGIN {found=0}
            /^## / {
              if ($0 ~ "\\["tag"\\]") {found=1; next}
              else if ($0 ~ /^## \[[0-9]+\.[0-9]+\.[0-9]+\]/) {found=0}
            }
            found {print}
          ' CHANGELOG.md)
          
          if [ -z "$SECTION" ]; then
            SECTION=$(cat CHANGELOG.md)
          fi
          
          CLEAN_SECTION=$(echo "$SECTION" | sed '/^$/d')
          
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "$CLEAN_SECTION" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release with Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: "v${{ github.ref_name }} (Test Env)"
          body: |
            ### Version ${{ github.ref_name }} (Test Environment)
            
            <details>
            <summary>Dernières modifications</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
            
            **Artifacts disponibles:**
            - Roadbook.apk (Android Package)
            - Roadbook.aab (Android App Bundle)
            
            [Voir le CHANGELOG complet](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md)
          prerelease: true
          files: |
            build/app.apk
            build/app.aab

      - name: Create PR to main
        if: github.ref == 'refs/heads/test-env' && !contains(github.event.head_commit.message, 'chore(release)')
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: test-env
          title: "Merge test-env → main (v${{ github.ref_name }})"
          body: |
            ### Nouvelles modifications dans test-env
            
            **Version:** ${{ github.ref_name }}
            **Artifacts:** [Voir la release](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }})
            
            <details>
            <summary>Dernières modifications</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
          labels: "automated-pr,needs-review"