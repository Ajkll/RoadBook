name: Test Env Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - test-env

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          yarn global add eas-cli

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: client/yarn.lock

      - name: Install dependencies
        run: |
          cd client
          yarn install

      - name: Create keystore credentials
        run: |
          cd client
          mkdir -p ./credentials/android
          echo '${{ secrets.EXPO_ANDROID_KEYSTORE_BASE64 }}' | base64 -d > ./credentials/android/keystore.jks
          cat > ./credentials.json << EOF
          {
            "android": {
              "keystore": {
                "keystorePath": "./credentials/android/keystore.jks",
                "keystorePassword": "${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.EXPO_ANDROID_KEY_ALIAS }}",
                "keyPassword": "${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}"
              }
            }
          }
          EOF

      - name: Build with EAS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd client
          
          # Cleanup et setup
          rm -rf .expo
          npm config set //registry.npmjs.org/:_authToken=${EXPO_TOKEN}
          
          # Authentification Expo
          echo "üîë Authenticating with Expo..."
          npx expo login --non-interactive --token $EXPO_TOKEN
          
          # Validation auth
          if ! npx expo whoami; then
            echo "‚ùå Expo authentication failed"
            exit 1
          fi
          
          # Configuration EAS
          echo "‚öôÔ∏è Configuring EAS project..."
          npx eas-cli configure
          
          # Build EAS
          echo "üèó Starting EAS build..."
          npx eas-cli build \
            --platform android \
            --non-interactive \
            --no-wait \
            --json | tee eas-build.log
          
          # Optionnel: R√©cup√©rer l'ID du build
          BUILD_ID=$(jq -r '.buildId' eas-build.log)
          echo "Build ID: ${BUILD_ID}"
          echo "build_id=${BUILD_ID}" >> $GITHUB_OUTPUT
          
          echo "‚úÖ EAS build started successfully. Check progress at https://expo.dev/accounts/ajkll/projects/Roadbook/builds"

      - name: Local build for GitHub artifacts
        run: |
          cd client
          if [ ! -d "./android" ]; then
            yarn expo prebuild --platform android --clean
          fi
          
          cd android
          ./gradlew bundleRelease
          
          mkdir -p ../../build
          AAB_PATH=$(find . -name "*.aab" -type f | grep -v intermediates | head -n 1)
          [ -n "$AAB_PATH" ] && cp "$AAB_PATH" ../../build/app.aab || exit 1

      - name: Convert AAB to APK
        run: |
          if [ -f "./build/app.aab" ]; then
            wget https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar
            java -jar bundletool-all-1.15.6.jar build-apks \
              --bundle=./build/app.aab \
              --output=./build/app.apks \
              --mode=universal
            unzip ./build/app.apks -d ./build
            mv ./build/universal.apk ./build/app.apk
          else
            exit 1
          fi

      - name: Extract changelog entry
        id: changelog
        run: |
          cd client
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          if [ -f "CHANGELOG.md" ]; then
            SECTION=$(awk -v tag="$CURRENT_TAG" '
              BEGIN {found=0}
              /^## / {
                if ($0 ~ "\\["tag"\\]") {found=1; next}
                else if ($0 ~ /^## \[[0-9]+\.[0-9]+\.[0-9]+\]/) {found=0}
              }
              found {print}
            ' CHANGELOG.md)
            [ -z "$SECTION" ] && SECTION=$(cat CHANGELOG.md)
          else
            SECTION="Pas de CHANGELOG.md trouv√© pour cette version."
          fi
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "$SECTION" | sed '/^$/d' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release with Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: "v${{ github.ref_name }} (Test Env)"
          body: |
            ### Version ${{ github.ref_name }} (Test Environment)
            
            <details>
            <summary>Derni√®res modifications</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
            
            **Artifacts disponibles:**
            - Roadbook.apk (Android Package)
            - Roadbook.aab (Android App Bundle)
            
            [Voir le CHANGELOG complet](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.ref_name }}/client/CHANGELOG.md)
          prerelease: true
          files: |
            build/app.apk
            build/app.aab

      - name: Clean sensitive files before PR
        if: github.ref == 'refs/heads/test-env'
        run: |
          cd client
          rm -f credentials.json
          rm -rf credentials
          git add .
          git commit -m "Remove sensitive files before PR" || echo "No changes to commit"

      - name: Create PR to main
        if: github.ref == 'refs/heads/test-env' && !contains(github.event.head_commit.message, 'chore(release)')
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: test-env
          title: "Merge test-env ‚Üí main (v${{ github.ref_name }})"
          body: |
            ### Nouvelles modifications dans test-env
            
            **Version:** ${{ github.ref_name }}
            **Artifacts:** [Voir la release](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }})
            
            <details>
            <summary>Derni√®res modifications</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
          labels: "automated-pr,needs-review"
          commit-message: "chore: merge test-env to main [skip ci]"