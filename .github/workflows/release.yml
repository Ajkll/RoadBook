name: Test Release and PR Workflow

on:
  push:
    branches:
      - test-env

jobs:
  test_create_pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Simulate sensitive files cleanup
        run: |
          echo "Creating test files to clean..."
          mkdir -p client/credentials/android
          echo "{}" > client/credentials.json
          touch client/credentials/android/keystore.jks
          
          echo "Cleaning sensitive files..."
          rm -f client/credentials.json
          rm -rf client/credentials
          git add .
          git diff --staged --quiet || git commit -m "Remove sensitive files before PR"

      - name: Extract test changelog
        id: changelog
        run: |
          mkdir -p client
          # Crée un faux changelog si inexistant
          if [ ! -f "client/CHANGELOG.md" ]; then
            echo "## [Test Version]\n- Test feature\n- Test fix" > client/CHANGELOG.md
          fi
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_OUTPUT
          head -n 5 client/CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create PR to main
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: "test-env-to-main-$(date +%Y%m%d%H%M%S)"
          title: "TEST PR - Merge test-env → main"
          body: |
            ### PR de Test
            
            <details>
            <summary>Modifications simulées</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
            
            **Ceci est un test automatisé**
          labels: "automated-pr,test,needs-review"
          commit-message: "chore: test merge from test-env [skip ci]"

  test_release:
    needs: test_create_pr
    if: startsWith(github.ref, 'refs/heads/test-env')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Create test artifacts
        run: |
          mkdir -p build
          # Création de fichiers factices
          echo "Test AAB" > build/app.aab
          echo "Test APK" > build/app.apk

      - name: Simulate changelog extraction
        id: changelog
        run: |
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "## [Test Version]" >> $GITHUB_OUTPUT
          echo "- Feature 1" >> $GITHUB_OUTPUT
          echo "- Fix 1" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Simulate Release Creation
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "test-release-$(date +%Y%m%d%H%M%S)"
          name: "Test Release $(date +%F)"
          body: |
            ### Version de Test
            
            <details>
            <summary>Modifications simulées</summary>
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            </details>
          draft: true
          files: |
            build/app.aab
            build/app.apk