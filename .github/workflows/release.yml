name: Test Package Only

on:
  push:
    branches:
      - test-env

jobs:
  package_only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: Test Env Release
          workflow_conclusion: success
          name: build-artifacts
          path: ./build
          check_artifacts: true
          search_artifacts: true

      - name: Debug file structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Files in build directory:"
          ls -la build || echo "Build directory not found"
          find . -name "app.aab" -type f || echo "app.aab not found"
          find . -name "keystore.jks" -type f || echo "keystore.jks not found"

      - name: Ensure keystore directory
        run: |
          mkdir -p ./client/credentials/android
          
          # Essayer de trouver le keystore et le copier
          KEYSTORE_PATH=$(find . -name "keystore.jks" -type f | head -n 1)
          
          if [ -n "$KEYSTORE_PATH" ]; then
            echo "Found keystore at $KEYSTORE_PATH"
            cp "$KEYSTORE_PATH" ./client/credentials/android/keystore.jks
          else
            echo "No keystore found!"
            exit 1
          fi

      - name: Convert AAB to APK
        run: |
          # Trouver le fichier app.aab où qu'il soit
          AAB_PATH=$(find . -name "app.aab" -type f | head -n 1)
          
          if [ -n "$AAB_PATH" ]; then
            echo "Found app.aab at $AAB_PATH"
            # Créer le répertoire de sortie si nécessaire
            mkdir -p build
          
            # Copier le fichier app.aab dans le répertoire build si nécessaire
            if [ "$AAB_PATH" != "./build/app.aab" ]; then
              cp "$AAB_PATH" "./build/app.aab"
            fi
          
            # Télécharger bundletool
            wget https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar
          
            # Vérifier que le keystore existe
            if [ ! -f "./client/credentials/android/keystore.jks" ]; then
              echo "ERROR: keystore.jks not found at expected path!"
              exit 1
            fi
          
            # Convertir AAB en APK
            java -jar bundletool-all-1.15.6.jar build-apks \
              --bundle=./build/app.aab \
              --output=./build/app.apks \
              --mode=universal \
              --ks=./client/credentials/android/keystore.jks \
              --ks-pass=pass:${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }} \
              --ks-key-alias=${{ secrets.EXPO_ANDROID_KEY_ALIAS }} \
              --key-pass=pass:${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}
          
            # Extraire et renommer l'APK
            unzip ./build/app.apks -d ./build
            mv ./build/universal.apk ./build/app.apk
            echo "APK conversion successful"
          else
            echo "ERROR: app.aab file not found!"
            exit 1
          fi

      - name: Upload packaged artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packaged-artifacts
          path: |
            build/app.aab
            build/app.apk