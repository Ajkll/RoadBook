name: Fix Package Test

on:
  workflow_dispatch:
    inputs:
      artifact_url:
        description: 'URL de l''artifact à télécharger'
        required: true
        default: 'https://github.com/Ajkll/testingroad/actions/runs/14832439690/artifacts/3060736967'

jobs:
  test_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup environnement
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget

      - name: Téléchargement manuel de l'artifact
        run: |
          echo "Création du répertoire de travail"
          mkdir -p build_artifacts
          
          echo "Téléchargement de l'artifact depuis l'URL fournie"
          # Note: GitHub nécessite un token pour télécharger les artifacts
          # On utilise le token GITHUB_TOKEN fourni par Actions
          curl -L -o artifacts.zip "${{ github.event.inputs.artifact_url }}/zip" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
          
          echo "Extraction de l'artifact téléchargé"
          unzip -o artifacts.zip -d build_artifacts
          
          echo "Contenu du répertoire d'artifacts:"
          find build_artifacts -type f | sort
          echo "Taille des fichiers:"
          du -h build_artifacts/*

      - name: Préparation du keystore
        run: |
          mkdir -p ./client/credentials/android
          if [ -f "build_artifacts/client/credentials/android/keystore.jks" ]; then
            echo "Keystore trouvé dans l'artifact"
            cp build_artifacts/client/credentials/android/keystore.jks ./client/credentials/android/
          elif [ -f "build_artifacts/keystore.jks" ]; then
            echo "Keystore trouvé à la racine des artifacts"
            cp build_artifacts/keystore.jks ./client/credentials/android/
          else
            echo "ATTENTION: Keystore non trouvé, vérifiez la structure des artifacts"
            find build_artifacts -name "*.jks" -type f
          fi
          
          # Vérification du keystore
          ls -la ./client/credentials/android/ || echo "Répertoire du keystore non créé"

      - name: Recherche du fichier AAB
        id: find_aab
        run: |
          echo "Recherche du fichier AAB..."
          AAB_PATH=$(find build_artifacts -name "*.aab" -type f | head -n 1)
          
          if [ -n "$AAB_PATH" ]; then
            echo "Fichier AAB trouvé: $AAB_PATH"
            mkdir -p build
            cp "$AAB_PATH" build/app.aab
            echo "aab_path=build/app.aab" >> $GITHUB_OUTPUT
          else
            echo "ERREUR: Aucun fichier AAB trouvé dans les artifacts!"
            exit 1
          fi
          
          # Vérification
          ls -la build/

      - name: Conversion AAB en APK
        if: steps.find_aab.outputs.aab_path
        run: |
          echo "Début de la conversion AAB en APK"
          wget https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar
          
          echo "Commande de conversion avec bundletool:"
          echo "java -jar bundletool-all-1.15.6.jar build-apks --bundle=${{ steps.find_aab.outputs.aab_path }} --output=build/app.apks --mode=universal --ks=./client/credentials/android/keystore.jks --ks-pass=pass:**** --ks-key-alias=**** --key-pass=pass:****"
          
          java -jar bundletool-all-1.15.6.jar build-apks \
            --bundle=${{ steps.find_aab.outputs.aab_path }} \
            --output=build/app.apks \
            --mode=universal \
            --ks=./client/credentials/android/keystore.jks \
            --ks-pass=pass:${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }} \
            --ks-key-alias=${{ secrets.EXPO_ANDROID_KEY_ALIAS }} \
            --key-pass=pass:${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}
          
          echo "Extraction de l'APK depuis le fichier APKS"
          unzip build/app.apks -d build
          mv build/universal.apk build/app.apk
          
          echo "Vérification des fichiers générés:"
          ls -la build/
          
          echo "Conversion terminée avec succès!"

      - name: Upload des artifacts générés
        uses: actions/upload-artifact@v4
        with:
          name: test-package-artifacts
          path: |
            build/app.aab
            build/app.apk